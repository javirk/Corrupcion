{
  "name": "A model of corruption",
  "tagline": "",
  "body": "# Corruption Model\r\n\r\n### Welcome\r\nThis program developed entirely under Python reproduces a simple stochastic agent-based model of corruption using Monte Carlo method. It also contains code for the implementation of a non-stationary Markov model designed specifically for the model.\r\n\r\n### Files\r\nIt basically has 5 main files that run independently:\r\n\r\n    esParametro.py\r\n    esTiempo.py\r\n    mtParametro.py\r\n    mtTiempo.py\r\n    analizar.py\r\n\r\nThe first two programs refer to the non-stationary Markov model, the \"mt\" ones are used to reproduce the Montecarlo and the last one just analyzes the results given. The parameters for each program can be changed in the Settings folder.\r\n\r\n### More information\r\nThe code itself also has functions to create scale-free and Erd√∂s-Renyi networks that the program uses for the simulations. The networks are to be saved in the `Input` folder for the program to use them properly.\r\n\r\nIn case you want to generate networks and use them separately from the main program a folder named `Output` with the same structure as the `Input` folder must be created.\r\n\r\nTo run the program you must create a folder named `Resultados` with the following folders in it:\r\n\r\n    Estacionario\r\n    EstacionarioPar\r\n    Montecarlo\r\n    MontecarloPar\r\n\r\nDepending on the program you want to run (two folders for Markov [`Estacionario`] and two for Monte Carlo). After that the folders are created automatically by the program.\r\n\r\nFor the results to be analyzed it is necessary to change the `settingsAN` file properly, pointing at the folder where the results are (there is an example in it).\r\n\r\n### Authors and Contributors\r\nThis is an academic study and the code uploaded here is only written by Javier Gamazo.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}